#include "Bullet.h"Bullet::Bullet(void)  :_targetRotation(0),_fighting(false){    this->reset();       }Bullet::~Bullet(void){}Bullet* Bullet::create () {	Bullet * sprite = new Bullet();    	if (sprite && sprite->initWithSpriteFrameName("bullet.png")) {		sprite->autorelease();        sprite->setRadius(sprite->boundingBox().size.height * 0.5f);        return sprite;	}	CC_SAFE_DELETE(sprite);	return NULL;}void Bullet::reset () {        _speed = 1000;    	_targetRotation = 90;        _fighting = false;        float angle = CC_DEGREES_TO_RADIANS(_targetRotation);	_vector = ccp (_speed * cos( angle ),				   _speed * sin( angle ));        setVisible(false);}			void Bullet::update (float dt) {    GameSprite::update(dt);    CCPoint position = this->getPosition();       if (_fighting)    {        position.x += _vector.x * dt;        position.y += _vector.y * dt;    }              if (_targetRotation > this->getRotation() + 180) {        _targetRotation -= 360;    }    if (_targetRotation < this->getRotation() - 180) {        _targetRotation += 360;    }        this->setPosition(position);          	}void Bullet::select(bool flag) {        }